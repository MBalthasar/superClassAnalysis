% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PolygonSaturation.R
\name{PolygonSaturation}
\alias{PolygonSaturation}
\title{Polygon Saturation Identification Tool}
\usage{
PolygonSaturation(img, model, trainData, valData, prodAcc, classes,
  responseCol, overall, plot_graph, nSamples)
}
\arguments{
\item{img}{A raster file.}

\item{model}{The model which will be used for the classification. See \code{\link[caret]{train}} for model selection.}

\item{trainData}{SpatialPolygonsDataFrame or SpatialPointsDataFrame containing the training locations.}

\item{valData}{SpatialPolygonsDataFrame or SpatialPointsDataFrame containing the validation locations (optional). If no valData is given, the trainData will be split into 70 percent training and 30 percent validation.}

\item{prodAcc}{TRUE or FALSE. If prodAcc is TRUE, the producer accuracy will be returned. If prodAcc is FALSE, the user accuracy will be returned.}

\item{classes}{The column in \code{trainData}, which contains the response variable indicated with the $ sign.}

\item{responseCol}{Character or integer giving the column in \code{trainData}, which contains the response variable.}

\item{overall}{TRUE or FALSE. Defines, whether the overall accuracy should be included or not.}

\item{plot_graph}{TRUE or FALSE. Defines, whether the resulting data.frame should be automatically plotted or not.}

\item{nSamples}{Integer. Number of samples per land cover class.}
}
\value{
A data.frame with the accuracy numbers per class depending on the number of polygons used.
}
\description{
This function aims to identify the best number of polygons required per class within a training data set
in order to get the highest accuracy results from a supervised classicifation.
It furthermore enables
to identify polygons which lead to lower classification accuracies for training data quality testing.
The function will always use the same number of polygons per class and is therefore limited by the class
with the least amount of polygons. It is overall recommended to have the same number of polygons for
each class.
The function will start with 2 polygons per class.
}
\examples{
library(sp)
library(raster)
library(RStoolbox)
library(reshape2)
library(ggplot2)
library(randomForest)

# Load sample raster file
my_raster <- raster::brick(system.file(package = "superClassAnalysis", "extdata", "landsat_sample.tif"))

# Load sample training and validation data
my_train <- raster::shapefile(system.file(package = "superClassAnalysis", "extdata", "training_sample.shp"))
my_val <- raster::shapefile(system.file(package = "superClassAnalysis", "extdata", "validation_sample.shp"))

# Execute PolygonSaturation function
x = PolygonSaturation(img = my_raster, model = 'rf', trainData = my_train,
                     valData = my_val, nSamples = 100, classes = my_train$class_name,
                     responseCol = "class_name", prodAcc = TRUE, overall = TRUE,
                     plot_graph = TRUE)


}
